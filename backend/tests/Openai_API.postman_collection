{
	"info": {
		"_postman_id": "6ec654ec-c188-4fcd-a691-c47c6fb2b826",
		"name": "Openai API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26508684"
	},
	"item": [
		{
			"name": "OpenAI API test",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"uuid": "a2f4ba36-5371-4017-88d8-a635bf391104"
					},
					{
						"key": "Authorization",
						"value": "Bearer <enter API_KEY here",
						"uuid": "f402a2a3-293f-4f53-a8fa-bcb48de27cda"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"model\": \"gpt-3.5-turbo\",\r\n     \"messages\": [{\"role\": \"user\", \"content\": \"Say this is a test!\"}],\r\n     \"temperature\": 0.7\r\n   }"
				},
				"url": {
					"raw": "https://api.openai.com/v1/chat/completions",
					"protocol": "https",
					"host": [
						"api",
						"openai",
						"com"
					],
					"path": [
						"v1",
						"chat",
						"completions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Generate story",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for response status\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test for presence of response content\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.response.to.have.body;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"prompt\": \"A lion went into a tiger's den\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/story",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"story"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reset messages context",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test that the response status is 200 or another success status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Test that the response body contains a success message or indication of successful reset",
							"pm.test(\"Reset successful\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Message history reset successfully.\");",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/story/resetMessages",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"story",
						"resetMessages"
					]
				}
			},
			"response": []
		}
	]
}
